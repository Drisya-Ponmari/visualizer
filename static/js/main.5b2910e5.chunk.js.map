{"version":3,"sources":["Components/Block/Block.jsx","Components/Matrix.jsx","Container/Algorithms/IntegralKnapsack.js","Problems/helperHighlight.js","Problems/IntegralKnapSackProblem.js","Utils/CreateBlock.js","Utils/CreateMatrix.js","Components/NewCircle.js","Components/CalXY.js","Components/NewEdge.js","Components/arrow.js","Container/Subprobs/IntegralKnapSackSubprob.jsx","Components/IntegralKnapSack/Tree.js","Components/IntegralKnapSack/Subproblem.jsx","Container/Visualizer/IntegralKnapsackVisualizser.jsx","Container/Input/IntegralKnapSackInput.jsx","Utils/Header/Header.jsx","Utils/Footer/Footer.jsx","Utils/Main/Main.jsx","Algorithm/IntegralKnapSackMain.jsx","Container/Algorithms/FractionalKnapSack.js","Problems/FractionalKnapSackProblem.js","Components/Box/Row.jsx","Components/Box/Box.jsx","Container/Visualizer/FractionalKnapSackVisualizer.jsx","Algorithm/FractionalKnapSackMain.jsx","logo.svg","Algorithm/Home.jsx","Container/Input/HuffmanCodeInput.jsx","Utils/KendoSurface.jsx","Components/SmallCircle.js","DataStructure/HuffmanCodeTree.js","Container/Algorithms/HuffmanCode.js","Problems/HuffmanCodeProblem.js","Components/StringArray/STring.jsx","Components/StringArray/StringArray.jsx","Container/Visualizer/HuffmanCodeVisualizer.jsx","Algorithm/HuffmanCodeMain.jsx","App.js","reportWebVitals.js","index.js"],"names":["Block","props","extraClassName","role","className","value","Matrix","labeclassname","title","description","matrix","map","numList","i","num","j","label","createCell","update","firstvisit","secondvisit","v","equation","firstVisit","secondVisit","vindex","subProblems","dp","weight","W","n","flag","data","Wt","push","length","knapSack","w","visited","Id","Math","max","helperHighlight","codeLength","document","getElementById","IntegralKnapSackProblem","id","createBlock","createMatrix","val","Row","Col","Array","twoD","row","col","GeomCircle","geometry","Circle","NewCircle","center","colour","radius","heading","cap","Text","String","group","Group","circle","fill","color","append","XY","from","to","ax","bx","ay","by","abx","aby","ab","sqrt","midPoint","a","b","NewEdge","directed","arrow","newTo","newFrom","x1","y1","x2","y2","path","Path","stroke","width","dx","dy","dist","x3","y3","x4","y4","moveTo","curveTo","m0","m1","m2","m3","m4","m5","arrow1","cx","cy","ex","ey","fx","fy","lineTo","Arrow","text","font","IntegralKnapSackSubprob","createSurface","element","ReactDOM","surface","Surface","create","state","vertices","values","cir","vertexCoordinates","p","y","xin","yin","console","log","edge","draw","Tree","this","style","height","display","Component","Subproblem","IntegralKnapsackVisualizer","numberOfItems","capacity","weights","isRunning","Iter","currentId","isChange","len","subprobs","speed","setState","prevState","allSteps","IntegralKnapsack","handlePlay","cell","temp","vtemp","prevcell","currentBlock","isNotEqual","clearInterval","interval","setInterval","doColor","prevBlock","deColor","buttonShow","checkBound","ButtonName","onClick","visualize","handlePause","handleReset","handleAlgo","IntegralKnapSackInput","Capcity","handleChange","bind","handleSubmit","event","target","name","temp_values","split","temp_weights","Number","Capacity","func","inputPreProcess","preventDefault","textAlign","onSubmit","type","onChange","Header","Footer","Main","isClicked","Visualizer","Input","IntegralKnapSackMain","fractionalKnapSack","valbywt","sort","index","weightArray","valueArray","ind","fraction","wt","FractionalKnapSackProblem","background","fontSize","toFixed","Box","item","filledHeight","filledWeight","filledValue","heightArray","pbyw","numerator","marginLeft","borderCollapse","border","FractionalKnapsackVisualizer","density","currentWt","currentVal","FractionalKnapSack","equationArray","IdArray","c","floor","random","wtemp","dtemp","previ","position","prevposition","slice","marginRight","marginBottom","marginTop","handleEnd","FractionalKnapSackMain","FractionalKnapSackVisualizer","Home","src","logo","alt","HuffmanCodeInput","message","leaves","chars","freqMap","Map","has","freq","get","set","sortMap","entries","key","KendoSurface","datastructure","code","SmallCircle","circleColor","p1","p2","HuffmanCodeTree","left","right","nodeCoordinates","edgeColor","edges","lastp1","lastp2","inc","e1","e2","updateCode","codeProcess","charMap","tempMessage","char","huffmanCode","minHeap","parents","iter","leasttwo","newNode","rest","concat","delete","HuffmanCodeProblem","STring","sTring","StringArray","align","array","HuffmanCodeVisualizer","numberOfDigits","ceil","log2","eLength","needCode","codeUpdate","mLength","componentWillReceiveProps","HuffmanCode","resultExhaustive","exhaustiveCode","HuffmanCodeMain","DropDown","e","history","padding","Menu","withRouter","App","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.5b2910e5.chunk.js","sourcesContent":["/**\n * @author Drisya ponamri\n */\nimport React from 'react';\nimport './Block.css';\n/**\n * @component \n * @description functional component  return a block in the matrix , with appropriate color and \n * value in it\n * @param {object} props contains the value and state (updated/visited) of the block\n * @returns JSX code to show colored block in matrix.\n * @see Matrix\n */\nfunction Block(props) {\n    /**\n     * Select the color of the block , by selecting the corresponding role \n     * from the prop\n     */\n    const extraClassName = props.role === \"stay\"\n        ? 'block base'\n        : props.role === \"visit\"\n            ? 'block visit'\n            : props.role === \"update\"\n                ? 'block update'\n                : props.role === \"visit-min\"\n                    ? 'block visit-min'\n                    : 'block base'\n    return (<div className={extraClassName + \" block-value\"}>\n        {props.value}\n    </div>);\n}\n\nexport default Block;","/**\n * @author Drisya P\n * @since 2020.11.12\n */\nimport React from \"react\";\nimport Block from \"./Block/Block\"\nimport \"../Utils/Label.css\"\n\n/**\n * @component\n * @description Function returns the jsx element to show the dp matrix, which is represented as table component.\n * @param {object} props  contains the two D array of objects to be rendered\n * \n * @returs JSX code to show matrix on UI \n * @see IntegralKnapsackVisualizer#render\n */\nfunction Matrix(props) {\n    //console.log(props)\n    return (\n        <div>\n            <label className={props.labeclassname}>{props.title}</label>\n            <p className=\"description\"> {props.description}</p>\n            <table>\n                <tbody>\n                    {\n                        props.matrix.map((numList, i) => (\n                            <tr key={i}>{\n                                numList.map((num, j) =>\n                                    <td key={j}>\n                                        <label className=\"colno\"> {((props.label) && (i === 0)) ? j : ''}</label>\n                                        <Block\n                                            value={num.value}\n                                            role={num.role}\n                                        />\n                                    </td>)\n                            }</tr>\n                        ))\n                    }</tbody>\n            </table>\n        </div>\n\n    );\n}\n\nexport default Matrix;","/**\n * @author Drisya P\n * @since 2020.11.12\n */\n\n/** \n * @function \n * @param {integer} n Total number of items availabe\n * @param {integer} W Capacity of the knapsack\n * @param {Array<integer>} w Weight of the each items\n * @param {Array<integer>}  v value of the each items\n * \n * @description This function finds the dp matrix for the given input.\n * \n * @returns  Array of object which include,\n * value of the current updated cell,\n * row and column of cell updated and visited,\n * value of the item included,\n * current dp equation. This will give the overall information of how algorithm is executed.\n*/\nfunction knapSack(n, W, w, v) {\n\n    let visited = [];\n    let dp = [];\n    let equation = null;\n    let Id = []\n\n    //console.log(w)\n    /**Initializing the dp matrix */\n    for (let i = 0; i <= n; i++) {\n        dp[i] = []\n        for (let j = 0; j <= W; j++) {\n            dp[i][j] = 0\n        }\n    }\n\n    /**Knapsack algorithm \n     *visited is updated by pushing the neccessary info whenever one cell is updated.\n    */\n    for (let i = 0; i <= n; i++) {\n        for (let j = 0; j <= W; j++) {\n            /**Base condition */\n            if (i === 0 || j === 0) {\n\n                dp[i][j] = 0;\n                equation = \"opt [\" + i + \"][\" + j + \"] = 0\";\n                visited.push(createCell(dp[i][j], [i, j], null, null, null, equation));\n                Id.push([4, 5])\n            }\n            /** Item can be fitted in the sack. Take the optimal from the previous and new.*/\n            else if (w[i - 1] <= j) {\n\n                dp[i][j] = Math.max(v[i - 1] + dp[i - 1][j - w[i - 1]], dp[i - 1][j]);\n                Id.push([6, 7])\n                equation = \"opt[\" + i + \"][\" + j + \"]  =  max( p(O\" + (i) + \") + opt[\" + (i - 1) + \"][ \" + j + \"- w(O\" + (i) + \") ], opt[\" + (i - 1) + \"][\" + j + \"] )\";\n\n                if (v[i - 1] + dp[i - 1][j - w[i - 1]] > dp[i - 1][j]) {\n                    visited.push(createCell(dp[i][j], [i, j], [i - 1, j - w[i - 1]], [i - 1, j], [i - 1, \"visit\"], equation))\n                }\n                else {\n                    visited.push(createCell(dp[i][j], [i, j], [i - 1, j], [i - 1, j - w[i - 1]], [i - 1, \"visit-min\"], equation));\n                }\n\n            }\n            /**Item can't be fitted in the sack. Choose the older options */\n            else {\n                Id.push([8, 9])\n                dp[i][j] = dp[i - 1][j];\n                equation = \"opt[\" + i + \"][\" + j + \"]  =  opt[\" + (i - 1) + \"][\" + j + \"]\";\n                visited.push(createCell(dp[i][j], [i, j], [i - 1, j], null, null, equation));\n            }\n            //console.log(dp[i][j])\n        }\n    }\n\n    Id.push([12])\n    equation = \"return opt [ \" + n + \"][\" + W + \"]\";\n    visited.push(createCell(dp[n][W], [n, W], null, null, null, equation));\n    const data = subProblems(dp, v, w, W, n);\n    return [visited, Id, data];\n}\n\n/**\n * @function \n * @param {integer} value   value after updation of the current cell\n * @param {Array<integer>} update info (row, col) of the current cell\n * @param {Array<integer>} visit info of the visited cell\n * @param {integer} v index of the value for the item added and the css class.\n * @param {string} equation equation used for the current step\n * \n * @description makes the object by wrapping up the input paramenters.Helper function to knapsack \n * @see knapSack\n * @returns obect of the passed parameters.\n */\nconst createCell = (value, update, firstvisit, secondvisit, v, equation) => {\n    return {\n        value: value,\n        update: update,\n        firstVisit: firstvisit,\n        secondVisit: secondvisit,\n        vindex: v,\n        equation: equation\n    };\n};\n\nconst subProblems = (dp, value, weight, W, n) => {\n\n    var flag = 1;\n    var data = [];\n    var Wt = W;\n    for (let i = n; i >= 1; i--) {\n        if (flag === 1) {\n            data.push([Wt, dp[i][Wt], 1]);\n        }\n        if (dp[i][Wt] !== dp[i - 1][Wt]) {\n            data.push([value[i - 1], weight[i - 1]]);\n            Wt = Wt - weight[i - 1];\n            flag = 1;\n        }\n        else {\n            flag = 0;\n        }\n    }\n\n    if (data[data.length - 1].length === 2)\n        data.push([0, 0, 1]);\n    return data;\n}\nexport default knapSack;","export function helperHighlight(Id, codeLength) {\n\n    if (Id !== null) {\n        for (let i = 1; i < codeLength; i++) {\n            if (document.getElementById(i) != null)\n                document.getElementById(i).className = \"\"\n        }\n\n        for (let i = 0; i < Id.length; i++) {\n\n            if (document.getElementById(Id[i]) != null) {\n\n                document.getElementById(Id[i]).className = \"highlight\"\n            }\n        }\n    }\n} ","/**\n * @author Drisya Ponmari \n */\nimport \"../Utils/Font.css\"\nimport { helperHighlight } from \"./helperHighlight\"\n/**\n * @component IntegralKnapSakProblem \n * @description Functional component for showing the problem statement and psuedo code of Integral Knapsack\n * @param {object} props includes line 'id' of the psuedo code to be highlighted\n * @returns corresponding jsx code to show problem statement and psuedocode with the current step highlighted\n * */\nfunction IntegralKnapSackProblem(props) {\n\n    helperHighlight(props.id, 14);\n    return (\n        <div>\n            <h4 className=\"Heading\">Problem</h4>\n            <p className=\"paragraph\">Given weights and profits of n objects, put these items in a knapsack of capacity W to get the maximum total profit in the knapsack</p>\n\n            <div className=\"code\">\n                <p id={1}>{\"1.KnapSack( p , w, n ,W){\"}</p>\n                <p id={2}>{\"2.\"}<span className=\"tab\" />{\"for ( i = 0 to n) {\"}</p>\n                <p id={3}>{\"3.\"}<span className=\"tab\" /><span className=\"tab\" />{\"for ( j = 0 to W ) {\"}</p>\n                <p id={4}>{\"4.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"if ( i == 0 or j == 0 )\"}</p>\n                <p id={5}>{\"5.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"opt [ i , j ] = 0;\"}</p>\n                <p id={6}>{\"6.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"else if ( w (Oi)  <= j )\"}</p>\n                <p id={7}>{\"7.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"opt [ i , j ] = max ( p (Oi)  + opt [ i −1 , j − w (Oi) ] , opt [ i − 1 , j ] );\"}</p>\n                <p id={8}>{\"8.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"else\"}</p>\n                <p id={9}>{\"9.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"opt [ i , j ] = opt [ i − 1 , j ];\"}</p>\n                <p id={10}>{\"10.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"}\"}</p>\n                <p id={11}>{\"11.\"}<span className=\"tab\" /><span className=\"tab\" />{\"}\"}</p>\n                <p id={12}>{\"12.\"}<span className=\"tab\">{\" return opt [ n , W ];\"}</span></p>\n                <p id={13}>{\"13.\"}<span className=\"tab\" />{\"}\"}</p>\n\n            </div>\n        </div>\n    )\n}\n\nexport default IntegralKnapSackProblem;","\n/**\n * @function\n * @param {integer} value  value of a matrix block\n * @description Block of each matrix is created.\n * @see IntegralKnapsackVisualizer\n */\n\nexport function createBlock(value, role) {\n    return {\n        value: value,\n        role: role\n    }\n}","import { createBlock } from \"./CreateBlock\"\n\nexport function createMatrix(val, Row, Col) {\n\n\n    let matrix = new Array(Row + 1);\n    var twoD = false;\n    if (val !== null && val.length !== 0 && val[0].length >= 1) {\n        twoD = true;\n    }\n\n    for (let row = 0; row <= Row; row++)\n        matrix[row] = [];\n\n    for (let row = 0; row <= Row; row++) {\n\n        for (let col = 0; col <= Col; col++) {\n            if (!twoD)\n                matrix[row][col] = val === ([] || null) ? createBlock(null, 'stay') : createBlock(val[col], 'stay');\n            else\n                matrix[row][col] = val !== (null || []) ? createBlock(val[row][col], 'stay') : createBlock(null, 'stay');\n        }\n    };\n\n    return matrix;\n\n}\n","\nimport { Circle, geometry, Group, Text } from '@progress/kendo-drawing';\nconst { Circle: GeomCircle } = geometry;\n\nexport function NewCircle(center, value) {\n\n    var sz = value.length;\n    var colour, radius, heading, cap, val, weight;\n    var left = 60, right = 10;\n\n    if (sz === 2) {\n        colour = 'yellow';\n        radius = 30;\n        heading = new Text(\"Item\", [center[0] - 30, center[1] - 30]);\n        cap = new Text(\"\", center);\n        val = new Text(\"Value: \" + value[0], [center[0] - left, center[1] - 10]);\n        weight = new Text(\"Weight: \" + value[1], [center[0] - left, center[1] + 10]);\n\n    } else {\n        colour = 'orange';\n        radius = 50;\n        heading = new Text(\"KnapSack\", [center[0], center[1] - 40]);\n        cap = new Text(\"Capacity: \" + String(value[0]), [center[0] + right, center[1] - 10]);\n        val = new Text(\"Value: \" + String(value[1]), [center[0] + right, center[1] + 10]);\n        weight = new Text(\"\", center);\n\n    }\n    const group = new Group();\n    var circle = new Circle(new GeomCircle(center, radius), {\n        fill: {\n            color: colour\n        }\n    });\n\n    //  const text = new Text(text2, text3,);\n    group.append(circle, heading, cap, val, weight);\n    return group;\n\n\n}","\nexport function XY(from, to) {\n    var ax = from[0];\n    var bx = to[0];\n    var ay = from[1];\n    var by = to[1];\n\n    var size = 20;\n    var fullness1 = 5;\n    var fullness2 = 6;\n\n    var abx = bx - ax;\n    var aby = by - ay;\n    var ab = Math.sqrt(abx * abx + aby * aby);\n\n    var cx = bx - size * abx / ab;\n    var cy = by - size * aby / ab;\n    var fx = (fullness1 * cx + bx) / fullness2;\n    var fy = (fullness1 * cy + by) / fullness2;\n\n    return [fx, fy];\n}","import { Path, Group, Text } from '@progress/kendo-drawing';\nimport { Arrow } from './arrow';\nimport { XY } from './CalXY';\n//import {deCasteljau} from './deCasteljau';\n\n\nfunction midPoint(a, b) {\n    var point = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n    return point;\n}\n\nexport function NewEdge(from, to, colour, directed, weight) {\n\n    directed == true ? weight = weight : weight = ''\n    var newTo = XY(from, to);\n    var newFrom = XY(to, from);\n    var x1 = newFrom[0];\n    var y1 = newFrom[1];\n    var x2 = newTo[0];\n    var y2 = newTo[1];\n\n    var path = new Path({\n        stroke: {\n            color: colour,\n            width: 3,\n        }\n    });\n    var arrow;\n    var dx = x1 - x2\n    var dy = y1 - y2\n    var dist = Math.sqrt(dx * dx + dy * dy)\n    dx = dx / dist\n    dy = dy / dist\n    var x3 = x1 + (dist / 15) * dy\n    var y3 = y1 - (dist / 15) * dx\n    var x4 = x2 + (dist / 15) * dy\n    var y4 = y2 - (dist / 15) * dx\n\n    path.moveTo(x1, y1).curveTo([x3, y3], [x4, y4], [x2, y2]);\n\n    var m0 = midPoint([x1, y1], [x3, y3]);\n    var m1 = midPoint([x3, y3], [x4, y4]);\n    var m2 = midPoint([x4, y4], [x2, y2]);\n    var m3 = midPoint(m0, m1);\n    var m4 = midPoint(m1, m2);\n    var m5 = midPoint(m3, m4);\n    arrow = Arrow(m5, m3, colour);\n\n    //var points = [[x1,y1],[x2,y2],[x3,y3],[x4,y4]];\n    //var t = 0.5;\n    var group = new Group();\n\n    //var result = deCasteljau(points,t);\n    //console.log(result);\n    group.append(path);\n    if (typeof weight !== \"\" && typeof weight !== 'undefined') {\n        var text = new Text(weight, m5, {\n            font: `bold 15px Arial`\n        });\n        group.append(text);\n    }\n\n\n    //arrow = Arrow(m3,result,colour);\n    //group.append(arrow);\n    if (directed) {\n        group.append(arrow);\n        return group;\n    }\n    return group;\n}","import { Path } from '@progress/kendo-drawing';\n\nexport function Arrow(from, to, colour) {\n    var ax = from[0];\n    var bx = to[0];\n    var ay = from[1];\n    var by = to[1];\n    var arrow1 = new Path({\n        stroke: {\n            color: colour,\n            width: 3\n        }\n    });\n\n    var size = 13;\n    var ratio = 2;\n    var fullness1 = 2;\n    var fullness2 = 3;\n\n    var abx = bx - ax;\n    var aby = by - ay;\n    var ab = Math.sqrt(abx * abx + aby * aby);\n\n    var cx = bx - size * abx / ab;\n    var cy = by - size * aby / ab;\n    var dx = cx + (by - cy) / ratio;\n    var dy = cy + (cx - bx) / ratio;\n    var ex = cx - (by - cy) / ratio;\n    var ey = cy - (cx - bx) / ratio;\n    var fx = (fullness1 * cx + bx) / fullness2;\n    var fy = (fullness1 * cy + by) / fullness2;\n\n    arrow1.moveTo(bx, by);\n    arrow1.lineTo(dx, dy);\n    arrow1.lineTo(fx, fy);\n    arrow1.lineTo(ex, ey);\n    arrow1.lineTo(bx, by);\n\n\n    return arrow1;\n} ","import React, { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Surface } from '@progress/kendo-drawing';\nimport Tree from \"../../Components/IntegralKnapSack/Tree\"\n\nclass IntegralKnapSackSubprob extends Component {\n    surface;\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n        }\n    }\n    componentDidMount() {\n        //Tree(this.createSurface(), items, data);\n        Tree(this.createSurface(), this.state.data.length, this.state.data);\n    }\n    //data forms  = [[1, 1, 1], [2, 1], [3, 1, 1], [4, 1], [5, 1, 1], [6, 1], [7, 1, 1]]\n\n    createSurface = () => {\n        const element = ReactDOM.findDOMNode(this);\n        this.surface = Surface.create(element);\n        return this.surface;\n    }\n\n    render() {\n        return (\n            <div id=\"surface\" style={{\n                height: \"2500px\", width: \"2500px\", display: \"flex\"\n            }}>\n\n            </div>\n        );\n    }\n}\n\nexport default IntegralKnapSackSubprob;","import { Group } from '@progress/kendo-drawing';\nimport { NewCircle } from \"../NewCircle\";\nimport { NewEdge } from \"../NewEdge\"\n\nexport default function Tree(surface, vertices, values) {\n\n\n    var group = new Group();\n    var vertexCoordinates = [];\n\n    var p = 500;\n    var y = 150;\n    var xin = 100;\n    var yin = 100;\n    var cir;\n    if (vertices >= 1) {\n\n        cir = NewCircle([p, y], values[0]);\n        vertexCoordinates.push([p, y + 50]);\n        group.append(cir);\n\n    }\n    var i = 2;\n    while (i <= vertices) {\n\n\n        cir = NewCircle([p - xin, y + yin], values[i - 1]);\n        vertexCoordinates.push([p - xin, y + yin + 20]);\n        group.append(cir);\n\n        cir = NewCircle([p + xin, y + yin], values[i]);\n        vertexCoordinates.push([p + xin, y + yin + 50]);\n        group.append(cir);\n\n        p = p + xin;\n        y = y + yin;\n\n        i = i + 2;\n    }\n    console.log(vertexCoordinates);\n    for (i = 1; i <= vertices - 2; i += 2) {\n        var edge = NewEdge(vertexCoordinates[i - 1], vertexCoordinates[i], 'black', true);\n        group.append(edge);\n        edge = NewEdge(vertexCoordinates[i - 1], vertexCoordinates[i + 1], 'black', true);\n        group.append(edge);\n    }\n    // Render the group on the surface\n    surface.draw(group);\n}","import IntegralKnapSackSubprob from \"../../Container/Subprobs/IntegralKnapSackSubprob\"\nimport \"../../Utils/Font.css\"\nfunction Subproblem(props) {\n    console.log(props.data)\n    return (\n\n        < div >\n            <h1 className=\"label heading\">Sub Problems </h1>\n            <IntegralKnapSackSubprob data={props.data} />\n        </div >\n\n    );\n}\n\nexport default Subproblem;","/**\n * @author Drisya P\n * @since 2020.11.12\n */\n\nimport React, { Component } from \"react\";\nimport Matrix from \"../../Components/Matrix\";\nimport IntegralKnapsack from \"../Algorithms/IntegralKnapsack\";\nimport IntegralKnapSackProblem from \"../../Problems/IntegralKnapSackProblem\"\nimport \"../../Utils/Main/Main.css\"\nimport \"../../Utils/Font.css\"\nimport \"../../Utils/Button.css\"\nimport \"../../Utils/ControlBar.css\"\nimport { createMatrix } from \"../../Utils/CreateMatrix\"\n//import IntegralKnapSackSubprob from \"../Subprobs/IntegralKnapSackSubprob\"\nimport Subproblem from \"../../Components/IntegralKnapSack/Subproblem\"\n/**\n * @component IntegralKnapsackVisualizer\n * @description Class component responsible for the visualisation.\n */\nclass IntegralKnapsackVisualizer extends Component {\n\n    /**\n     * @constructor\n     * @param {object} props contains all the data needed to run Integral knapsack algorithm given by user\n     */\n    constructor(props) {\n\n        super(props);\n        /**\n         * state initialisarion.\n         * matrix - the dp matrix \n         * weight - weight of items\n         * value - value of items\n         * isRunning - variable to control start and stop visualisation.\n         * Iter - variable keeping tracking of the algorithm step.\n         * equation - DP equation\n         * currentId - Id correspond to pseudocode line.\n         */\n        this.state = {\n            matrix: createMatrix([], props.data.numberOfItems, props.data.capacity),\n            weight: createMatrix(props.data.weights, 0, props.data.numberOfItems - 1),\n            value: createMatrix(props.data.values, 0, props.data.numberOfItems - 1),\n            isRunning: false,\n            Iter: 0,\n            equation: null,\n            currentId: null,\n            isChange: false,\n            len: 1,\n            subprobs: [],\n            speed: 1,\n        }\n\n    }\n    /**\n     * @function\n     * @param {object} props \n     * @description ReactJS **lifecycle method** , whenever the props given to *IntegralKnapsackVisualizer* class component changes ,this method is called,\n     * And hence the state of the class is reinitialized.\n     */\n    componentWillReceiveProps(props) {\n        this.setState({\n            matrix: createMatrix([], props.data.numberOfItems, props.data.capacity),\n            weight: createMatrix(props.data.weights, 0, props.data.numberOfItems - 1),\n            value: createMatrix(props.data.values, 0, props.data.numberOfItems - 1),\n            isRunning: false,\n            Iter: 0,\n            equation: null,\n            currentId: null,\n            isChange: false,\n            len: 1,\n            subprobs: [],\n            speed: 1,\n        })\n\n    }\n\n    /**\n     * @function\n     * @event\n     * @description Pausing the visualisation. \n     */\n    handlePause() {\n        console.log(\"paused\")\n        /**\n         * set isRunning variable to false\n         */\n        this.setState(prevState => ({\n            isRunning: false\n        }))\n    }\n\n    /**\n     * @function\n     * @event\n     * @description Resuming the visualisation\n     */\n    handlePlay() {\n        console.log(\"played\")\n        /**\n         * set isRunning to true\n         */\n        this.setState(prevState => ({\n            isRunning: true\n        }))\n    }\n\n    handleAlgo() {\n        console.log(\"algo clicked\");\n\n        this.setState(prevState => ({\n            isChange: !this.state.isChange\n        }))\n    }\n\n    handleReset() {\n        console.log(\"reset\");\n\n        this.setState(prevState => ({\n            matrix: createMatrix([], this.props.data.numberOfItems, this.props.data.capacity),\n            weight: createMatrix(this.props.data.weights, 0, this.props.data.numberOfItems - 1),\n            value: createMatrix(this.props.data.values, 0, this.props.data.numberOfItems - 1),\n            isRunning: false,\n            Iter: 0,\n            equation: null,\n            currentId: null,\n            isChange: false,\n            len: 1,\n            subprobs: [],\n            speed: 1000,\n        }))\n    }\n    /**\n     * @function\n     * @description function calls the Integral knapsack algorithm and return the array of objects\n     * which has all the history about the updation of each cell in the matrix.\n     * And then calls the function that animate the algorithm.\n     */\n    visualize() {\n\n        console.log(\"visualize called\");\n        const allSteps = IntegralKnapsack(this.props.data.numberOfItems, this.props.data.capacity, this.props.data.weights, this.props.data.values);\n        this.visited = allSteps[0];\n        this.Id = allSteps[1];\n        this.setState(prevState => ({\n            subprobs: allSteps[2],\n            len: this.visited.length\n        }))\n        // console.log(\"result from integral Knapsack algorithm\" + visited);\n        this.handlePlay();\n\n    }\n\n\n\n    /**\n     * @function\n     * @description Helper Function to check rows and colun index of two cell a and be not the same\n     * */\n    isNotEqual(a, b) {\n        if (a === null || b === null)\n            return true;\n        if (a[1] === b[1] && a[0] === b[0])\n            return false;\n        return true;\n    }\n\n    /**\n     * @function\n     * @description Funtion to color the updating , visiting cells\n     */\n    doColor(cell) {\n\n        let temp = this.state.matrix;\n        let vtemp = this.state.value;\n\n        if (cell.vindex !== null)\n            vtemp[0][cell.vindex[0]].role = cell.vindex[1];\n        if (cell.firstVisit !== null)\n            temp[cell.firstVisit[0]][cell.firstVisit[1]].role = \"visit\";\n        if (cell.secondVisit !== null)\n            temp[cell.secondVisit[0]][cell.secondVisit[1]].role = \"visit-min\";\n\n        temp[cell.update[0]][cell.update[1]].value = cell.value;\n        temp[cell.update[0]][cell.update[1]].role = \"update\";\n\n        return [temp, vtemp]\n    }\n\n    /**\n     *@function\n     *@description Function to remove the color previusly updated cell\n     */\n    deColor(cell, prevcell, currentBlock) {\n\n        let temp = currentBlock[0]\n        let vtemp = currentBlock[1]\n\n        if (prevcell.firstVisit !== null && this.isNotEqual(cell.firstVisit, prevcell.firstVisit))\n            temp[prevcell.firstVisit[0]][prevcell.firstVisit[1]].role = \"stay\";\n        if (prevcell.secondVisit !== null && this.isNotEqual(cell.secondVisit, prevcell.secondVisit))\n            temp[prevcell.secondVisit[0]][prevcell.secondVisit[1]].role = \"stay\";\n        if (this.isNotEqual(cell.update, prevcell.update))\n            temp[prevcell.update[0]][prevcell.update[1]].role = \"stay\";\n\n        if (prevcell.vindex !== null && this.isNotEqual(cell.vindex, prevcell.vindex))\n            vtemp[0][prevcell.vindex[0]].role = \"stay\";\n\n\n        return [temp, vtemp];\n    }\n    checkBound() {\n        if (this.state.Iter >= this.state.len)\n            return true;\n        return false;\n    }\n    /**\n     * @function\n     * @description React JS **lifecycle** method which is invoked when a component gets unmounted.\n     * overriding to clear Setinterval id .\n     */\n    componentWillUnmount() {\n        console.log(\"cleared\")\n        clearInterval(this.interval)\n    }\n    /**\n     * @function\n     * @description React JS **lifecycle** method which is invoked when a component gets mounted.\n     * override to resume the visualisation\n     */\n    componentWillMount() {\n        /**\n        * updating the state matrix role , according to the block from the visited array.\n        * And also revert the previous assigning of the block role.\n        */\n        //    if( this.state.Iter >= this.visited.length)\n        this.interval = setInterval(() => {\n            if (this.state.isRunning && this.state.Iter < this.visited.length) {\n                const i = this.state.Iter;\n                const cell = this.visited[i];\n                /**\n                 * current showing cell by coloring\n                 */\n                const currentBlock = this.doColor(cell)\n                this.setState(prevState => ({\n                    matrix: currentBlock[0],\n                    value: currentBlock[1],\n                    equation: cell.equation,\n                    currentId: this.Id[i]\n                }))\n\n                /**\n                 * previous showing cell, decoloring it\n                 */\n                if (i !== 0) {\n                    const prevcell = this.visited[i - 1];\n                    const prevBlock = this.deColor(cell, prevcell, currentBlock)\n                    this.setState(prevState => ({\n                        matrix: prevBlock[0],\n                        value: prevBlock[1]\n                    }))\n                }\n                /**\n                 * increment the iteration\n                 */\n                this.setState(prevState => ({\n                    Iter: prevState.Iter + 1\n                }))\n            }\n        }, 2000);\n    }\n\n    /**\n     * @function\n     * @description ReactJS **lifecycle method** renders the DP matrix, play & pause button , problem statement & pseudocode on UI.\n     * \n     */\n    render() {\n        const isChange = this.state.isChange;\n        const id = this.state.currentId;\n        const buttonShow = this.checkBound();\n        const ButtonName = isChange ? \"Algorithm\" : \"Sub Problem\";\n        const data = this.state.subprobs;\n        //  console.log(\"buttonshow\", buttonShow);\n        //console.log(id);\n        return (\n            <section>\n\n                <div className=\"visual\">\n                    <Matrix\n                        matrix={this.state.matrix}\n                        label={true}\n                        title=\"DP table\"\n                        labeclassname=\"label heading\"\n                        description=\" DP[i][j] represents the maximum profit achievable using a knapsack of capacity 'j' and objects 'o1, ...oi'. Pink colour for updation, green and red for the visited cell where green represents for minimum and red for the maximum profit cell\"\n                    />\n                    <br />\n                    <Matrix\n                        matrix={this.state.value}\n                        label={false}\n                        title=\"profits\"\n                        labeclassname=\"label subheading\"\n                        description=\"\"\n                    />\n                    <br />\n                    <div className=\"control-bar\">\n                        <button className=\"button start\" onClick={() => this.visualize()}>Start Visualization</button><br />\n                        <button className=\"button play\" onClick={() => this.handlePlay()}>Resume</button>\n                        <button className=\"button pause\" onClick={() => this.handlePause()}>Pause</button>\n                        <button className=\"button play\" onClick={() => this.handleReset()}>Reset</button>\n\n                        {buttonShow ? <button className=\"button pause\" onClick={() => this.handleAlgo()}>{ButtonName}</button> : ''}\n                    </div>\n                </div>\n                <div className=\"desc\">\n                    <p className=\"equation\">Updating equation : {this.state.equation}</p>\n                    {isChange ? <Subproblem data={data} /> : <IntegralKnapSackProblem id={id} />}\n                </div>\n\n            </section>\n\n        )\n    }\n}\n\n\nexport default IntegralKnapsackVisualizer;","\n/**\n * @author Drisya P\n */\nimport React, { Component } from \"react\";\nimport \"../../Utils/Button.css\"\nimport \"../../Utils/Label.css\"\n\n/**\n * @component IntegralKnapSackInput\n * @description Class component that takes care of Integral KnapSack algorithm input\n * constructor receives props from the parent component\n * sets intial states needed for IN(Integral Knapsack) algorithm and binds event handlers.\n * @listens props.func\n */\nclass IntegralKnapSackInput extends Component {\n\n    /**\n     * @constructor \n     * @param {function} props Contains a function (which helps to start visualisation) that is called when the input form is submitted.\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: null,\n            weights: null,\n            Capcity: null\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n\n    /**\n     * @function\n     * @event \n     * @param {object} contains details (value, name etc )about an input field\n     * @description Whenever we change an input field , corresponding state of that entity changes.\n     */\n    handleChange(event) {\n\n        const { name, value } = event.target\n        this.setState({ [name]: value });\n    }\n\n\n    /**\n     * @function\n     * @description Function to preprocess the input given by User. For Integral Knapsack inputs are given by comman seperated.\n     * This function split the input and make it in to array. And all the input is wrapped in to an object called 'data'\n     */\n    inputPreProcess() {\n\n        /**\n         * Extracting input values\n         */\n        let temp_values = this.state.values.split(',');\n        let temp_weights = this.state.weights.split(',');\n        const values = temp_values.map((num) => { return Number(num) });\n        const weights = temp_weights.map((num) => { return Number(num) });\n        const number = values.length;\n        const capacity = Number(this.state.Capacity)\n\n        /**\n         * Wrapping up weight, value, capacity of knapsack in to an object.\n         */\n        const data = {\n            values: values,\n            weights: weights,\n            numberOfItems: number,\n            capacity: capacity\n        }\n        return data;\n    }\n\n    /**\n     * @function\n     * @event\n     * @param {object} event All information about the input field\n     * @description function 'inputPreProcess' is called when the input form is submitted and later a function in Main component\n     * is called \n     * @see Main#handleChange\n     */\n    handleSubmit(event) {\n\n        this.props.func(true, this.inputPreProcess())\n        event.preventDefault();\n    }\n\n    /**\n     * @function\n     * @description ReactJS **Lifecycle Method** helps to render the Input form in the UI.\n     */\n    render() {\n\n        return (\n            <div style={{ textAlign: 'center' }} >\n                <p> sample input <br /> profit array = 1,2,3  weight array = 1,2,3 weight=10</p>\n                <form onSubmit={this.handleSubmit}>\n                    <label className=\"label input\">profit array</label>\n                    <input type=\"text\"\n                        name=\"values\"\n                        value={this.state.values}\n                        onChange={this.handleChange}\n                    />\n\n                    <label className=\"label input\" >weight array</label>\n                    <input type=\"text\"\n                        name=\"weights\"\n                        value={this.state.weights}\n                        onChange={this.handleChange}\n                    />\n                    <label className=\"label input\" >Knapsack capacity </label>\n                    <input type=\"text\"\n                        name=\"Capacity\"\n                        value={this.state.Capcity}\n                        onChange={this.handleChange}\n                    />\n                    <button className=\"button submit\"> Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default IntegralKnapSackInput;","/**\n * @author Drisya P\n */\nimport React from 'react'\nimport './Header.css'\n/**\n * @component\n * @param {string} props title name \n * @description Creates Header with title\n */\nfunction Header(props) {\n\n    console.log(props)\n    return (<div>\n        <header className=\"Header\">\n            {props.title}\n        </header>\n    </div>);\n}\n\nexport default Header","/**\n * @author Drisya \n */\nimport React from 'react'\nimport './Footer.css'\n\n/**\n * @component\n * @description creatae footer \n */\nfunction Footer() {\n    return (<footer >\n        @author drisyaponmari\n    </footer>);\n}\n\nexport default Footer","/**\n * @author Drisya P\n */\nimport React, { Component } from \"react\"\nimport \"./Main.css\"\nimport Header from '../Header/Header'\nimport Footer from \"../Footer/Footer\"\n\n/**\n * @component\n * @description receives props from App.js which has\n * details about the algorithm to be visualized.\n */\nclass Main extends Component {\n  /**\n   * @constructor\n   * @param {object} props contains algorithms, visualizer and Inpur form\n   * class components \n   */\n  constructor(props) {\n    super(props)\n    /**\n     * isClicked - to check whether input is submitted by the user.\n     * data - user input data\n     */\n    this.state = {\n      isClicked: false,\n      data: null\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  /**\n   * @function\n   * @description visualisation starts by returning the jsx element from the corresponding algorithm passed via props\n   */\n  startvisualise() {\n    const Visualizer = this.props.Visualizer;\n    return (\n      <Visualizer data={this.state.data} />\n    )\n  }\n\n  /**\n   * @function\n   * @description function is called from the input form class of the algorithm,\n   * After the Input variables are given\n   * @param {boolean} isClicked \n   * @param {object} data \n   * @see IntegralKnapSackInput#handleSubmit\n   */\n  handleChange(isClicked, data) {\n\n    this.setState(prevState => {\n      return {\n        isClicked: isClicked,\n        data: data\n      }\n    })\n    console.log(\"handlechange in main called\")\n  }\n\n  /**\n   * @function\n   * @description **lifecyle method** that take care of all layout showing on UI.\n   */\n  render() {\n    const Visualizer = this.props.Visualizer;\n    const Input = this.props.Input;\n    const data = this.state.data;\n    const isClicked = this.state.isClicked;\n    return (\n\n      <body>\n        <Header title={this.props.title} />\n\n        <nav>\n          <Input func={this.handleChange} />\n        </nav>\n        <section>\n          {isClicked ? <Visualizer data={data} /> : ''}\n        </section>\n        <Footer />\n      </body>\n\n\n    )\n  }\n}\n\nexport default Main;","import React from 'react';\nimport IntegralKnapsackVisualizer from \"../Container/Visualizer/IntegralKnapsackVisualizser\"\nimport IntegralKnapSackInput from \"../Container/Input/IntegralKnapSackInput\"\nimport Main from \"../Utils/Main/Main\"\nexport default function IntegralKnapSackMain() {\n\n    return (\n\n        <Main\n            Visualizer={IntegralKnapsackVisualizer}\n            Input={IntegralKnapSackInput}\n            title=\"Integral Knapsack\"\n        />\n    );\n\n}\n","\nfunction fractionalKnapSack(n, W, w, v) {\n\n    let valbywt = [];\n    for (let i = 0; i < n; i++) {\n        valbywt.push([(v[i] / w[i]), i]);\n    }\n\n    valbywt.sort(function (a, b) {\n        return a[0] < b[0] ? -1 : 1;\n    })\n    let index = []\n\n    for (let i = 0; i < n; i++) {\n        index.push(valbywt[i][1]);\n    }\n\n    let weightArray = [], valueArray = [], ind = [], equation = [], Id = [];\n    for (let i = n - 1; i >= 0; i--) {\n\n        let j = index[i];\n        if (W - w[j] >= 0) {\n            W = W - w[j];\n            if (v[j] !== 0) {\n                weightArray.push(w[j]);\n                valueArray.push(v[j]);\n                ind.push(j);\n                equation.push(\"hello/\\n world\");\n                Id.push([5, 6, 7]);\n            }\n        } else {\n            let fraction = (W / w[j]);\n            let val = (v[j] * fraction);\n            let wt = (w[j] * fraction);\n            W = W - wt;\n            if (val !== 0) {\n                weightArray.push(wt);\n                valueArray.push(val);\n                ind.push(j);\n                equation.push(\"\");\n                Id.push([9, 10, 11]);\n\n            }\n        }\n    }\n    return [weightArray, valueArray, ind, equation, Id];\n}\n\nexport default fractionalKnapSack;","\nimport \"../Utils/Font.css\"\nimport { helperHighlight } from \"./helperHighlight\"\n\nfunction FractionalKnapSackProblem(props) {\n    helperHighlight(props.id, 14);\n    return (\n        <div>\n            <h4 className=\"Heading\">Problem</h4>\n            <p className=\"paragraph\">Given weights and values of n items, we need to put these items in a knapsack of capacity W to get the maximum total value in the knapsack.Here we are allowed to take the fraction of item</p>\n\n            <div className=\"code\">\n                <p id={1}>{\"1.Fractional-KnapSack( p , w, n ,W){\"}</p>\n                <p id={2}>{\"2.\"}<span className=\"tab\" />{\"Sort p & w with desending (p(1..n)/ w(1..n))\"}</p>\n                <p id={3}>{\"3.\"}<span className=\"tab\" />{\"totalValue = 0\"}</p>\n                <p id={4}>{\"4.\"}<span className=\"tab\" />{\"for ( i = 0 to n ) {\"}</p>\n                <p id={5}>{\"5.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"if ( W - w(i) >= 0)\"}</p>\n                <p id={6}>{\"6.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"totalValue += v(i)\"}</p>\n                <p id={7}>{\"7.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"W -= w(i)\"}</p>\n                <p id={8}>{\"8.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"else\"}</p>\n                <p id={9}>{\"9.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"fraction = W / w(j)\"}</p>\n                <p id={10}>{\"10.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"totalValue += ( fraction * v(i) )\"}</p>\n                <p id={11}>{\"11.\"}<span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" /><span className=\"tab\" />{\"W -= ( fraction * w(i) )\"}</p>\n                <p id={12}>{\"12.\"}<span className=\"tab\" />{\"}\"}</p>\n                <p id={13}>{\"13.\"}<span className=\"tab\">{\" return totalValue;\"}</span></p>\n                <p id={14}>{\"14.\"}<span className=\"tab\" />{\"}\"}</p>\n\n            </div>\n        </div>\n    )\n}\n\nexport default FractionalKnapSackProblem;","export default function Row(props) {\n\n    let val = props.value;\n    let wt = props.weight;\n    if (props.color === \"white\") {\n        val = \"\";\n        wt = \"0\";\n    }\n\n\n    return (\n\n        <tr key={props.i} style={{ height: props.height, background: props.color }}>\n            <p style={{ textAlign: 'center', color: 'white', fontSize: '15px' }}>Item: {props.i + 1}, profitByweight:{(val / wt).toFixed(2)}</p>\n        </tr>\n    )\n}","import React from 'react';\nimport Row from \"./Row\"\nimport \"../../Utils/Label.css\"\nfunction Box(props) {\n    const weight = props.weightArray;\n    const value = props.valueArray;\n    const color = props.color;\n    const item = props.item;\n    if (color[color.length - 1] !== \"white\") {\n        color.push(\"white\");\n\n    }\n    const capacity = props.capacity;\n\n    //calculate height array\n    let filledHeight = 0;\n    let filledWeight = 0;\n    let filledValue = 0;\n    let heightArray = [];\n    let index = [];\n    let n = weight.length + 1;\n    let pbyw = 0;\n    for (let i = 0; i < n - 1; i++) {\n        pbyw += (((value[i] / weight[i]).toFixed(2)) * 60);\n    }\n    const totalHeight = 10;\n    pbyw *= 40;\n    console.log(\"pb\", pbyw)\n    for (let i = 0; i < n - 1; i++) {\n\n        //       let wt = (totalHeight / capacity) * weight[i];\n        //    let wt = (totalHeight / pbyw) * (value[i] / weight[i]);\n        let numerator = (value[i] / weight[i]).toFixed(2) * 60;\n        console.log(numerator);\n        let wt = totalHeight * (numerator * 1000 / pbyw)\n\n        filledHeight += wt;\n        filledValue += value[i];\n        filledWeight += weight[i];\n        heightArray.push(wt);\n        index.push(i);\n    }\n    if (capacity !== filledWeight) {\n        index.push(n - 1);\n        heightArray.push(Math.max(totalHeight - filledHeight, 0));\n    }\n    console.log(heightArray);\n    return (\n        <div >\n            <br />\n            <label className=\"label heading\">Knapsack</label><br />\n            <div className=\"label subheading \">\n                capacity :{capacity}\n                <br />\n                totalweight = {filledWeight}\n                <br />\n                totalProfit = {filledValue}\n            </div>\n            <br />\n            <div style={{ marginLeft: '20px' }}>\n                <table style={{ width: '300px', borderCollapse: 'collapse', border: '1px solid black' }}>\n                    <tbody>\n                        {\n                            index.map(\n                                (ind, i) => (<Row height={heightArray[ind]} color={color[ind]} value={value[ind]} weight={weight[ind]} i={item[ind]} />)\n                            )\n                        }</tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Box;","\nimport React, { Component } from 'react';\nimport FractionalKnapSack from '../Algorithms/FractionalKnapSack'\nimport FractionalKnapSackProblem from \"../../Problems/FractionalKnapSackProblem\"\nimport \"../../Utils/Main/Main.css\"\nimport \"../../Utils/Font.css\"\nimport \"../../Utils/Button.css\"\nimport \"../../Utils/ControlBar.css\"\nimport Matrix from \"../../Components/Matrix\";\nimport Box from \"../../Components/Box/Box\"\nimport { createMatrix } from \"../../Utils/CreateMatrix\"\n\nclass FractionalKnapsackVisualizer extends Component {\n    constructor(props) {\n\n        super(props);\n        let density = []\n        for (let i = 0; i < props.data.values.length; i++) {\n            density.push((props.data.values[i] / props.data.weights[i]).toFixed(2));\n        }\n        this.state = {\n            weight: createMatrix(props.data.weights, 0, props.data.numberOfItems - 1),\n            value: createMatrix(props.data.values, 0, props.data.numberOfItems - 1),\n            density: createMatrix(density, 0, props.data.numberOfItems - 1),\n            isRunning: false,\n            Iter: 0,\n            equation: null,\n            currentId: [2],\n            weightArray: [],\n            valueArray: [],\n            index: [],\n            color: [],\n            item: 0,\n            currentWt: 0,\n            currentVal: 0,\n\n\n        }\n\n\n    }\n    /**\n     * @function\n     * @param {object} props \n     * @description ReactJS **lifecycle method** , whenever the props given to *IntegralKnapsackVisualizer* class component changes ,this method is called,\n     * And hence the state of the class is reinitialized.\n     */\n    componentWillReceiveProps(props) {\n        let density = []\n        for (let i = 0; i < props.data.values.length; i++) {\n            density.push((props.data.values[i] / props.data.weights[i]));\n        }\n        this.setState({\n            weight: createMatrix(props.data.weights, 0, props.data.numberOfItems - 1),\n            value: createMatrix(props.data.values, 0, props.data.numberOfItems - 1),\n            density: createMatrix(density, 0, props.data.numberOfItems - 1),\n            speed: props.speed,\n            isRunning: false,\n            Iter: 0,\n            equation: null,\n            currentId: [2],\n            weightArray: [],\n            valueArray: [],\n            index: [],\n            color: [],\n            item: 0,\n            currentWt: 0,\n            currentVal: 0,\n\n        })\n\n    }\n\n    /**\n     * @function\n     * @event\n     * @description Pausing the visualisation. \n     */\n    handlePause() {\n\n        /**\n         * set isRunning variable to false\n         */\n        this.setState(prevState => ({\n            isRunning: false\n        }))\n\n    }\n\n    handleReset() {\n\n\n        this.setState(prevState => ({\n            Iter: 0,\n        }))\n    }\n\n    handleEnd() {\n\n        this.setState(prevState => ({\n            Iter: this.state.index.length - 1\n        }))\n    }\n    /**\n     * @function\n     * @event\n     * @description Resuming the visualisation\n     */\n    handlePlay() {\n\n        /**\n         * set isRunning to true\n         */\n        this.setState(prevState => ({\n            isRunning: true\n        }))\n    }\n\n\n\n    visualize() {\n\n        const allSteps = FractionalKnapSack(this.props.data.numberOfItems, this.props.data.capacity, this.props.data.weights, this.props.data.values);\n        this.equationArray = allSteps[3];\n        this.IdArray = allSteps[4];\n\n        this.setState(prevState => ({\n            weightArray: allSteps[0],\n            valueArray: allSteps[1],\n            index: allSteps[2],\n\n        }))\n\n        let n = allSteps[0].length;\n        let col = [];\n        for (let i = 0; i < n; i++) {\n            var letters = '0123456789ABCDEF';\n            var c = '#';\n            for (var j = 0; j < 6; j++) {\n                c += letters[Math.floor(Math.random() * 16)];\n            }\n            col.push(c);\n        }\n        this.setState(prevState => ({\n            color: col\n        }))\n        this.handlePlay();\n\n    }\n\n\n\n    /**\n     * @function\n     * @description Funtion to color the updating , visiting cells\n     */\n    doColor(i) {\n\n        let vtemp = this.state.value;\n        let wtemp = this.state.weight;\n        let dtemp = this.state.density;\n        vtemp[0][i].role = 'update';\n        wtemp[0][i].role = 'update';\n        dtemp[0][i].role = 'update';\n        return [vtemp, wtemp, dtemp];\n    }\n\n    /**\n     *@function\n     *@description Function to remove the color previusly updated cell\n     */\n    deColor(i, previ) {\n\n        let vtemp = this.state.value;\n        let wtemp = this.state.weight;\n        let dtemp = this.state.density;\n\n        if (i !== previ) {\n            vtemp[0][previ].role = 'stay';\n            wtemp[0][previ].role = 'stay';\n            dtemp[0][previ].role = 'stay';\n\n        }\n        return [vtemp, wtemp, dtemp];\n    }\n    checkBound() {\n        if (this.state.Iter >= this.state.len)\n            return true;\n        return false;\n    }\n    /**\n     * @function\n     * @description React JS **lifecycle** method which is invoked when a component gets unmounted.\n     * overriding to clear Setinterval id .\n     */\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n    /**\n     * @function\n     * @description React JS **lifecycle** method which is invoked when a component gets mounted.\n     * override to resume the visualisation\n     */\n    componentWillMount() {\n        /**\n        * updating the state matrix role , according to the block from the visited array.\n        * And also revert the previous assigning of the block role.\n        */\n        this.interval = setInterval(() => {\n            if (this.state.isRunning && this.state.Iter < this.state.index.length) {\n\n\n                const i = this.state.Iter;\n\n                const position = this.state.index[i];\n                /**\n                 * current showing cell by coloring\n                 */\n\n                const currentBlock = this.doColor(position)\n                this.setState(prevState => ({\n                    value: currentBlock[0],\n                    weight: currentBlock[1],\n                    density: currentBlock[2],\n                    equation: \"\",\n                    item: position,\n                    currentWt: this.state.weightArray[i],\n                    currentVal: this.state.valueArray[i],\n                    currentId: this.IdArray[i],\n                }))\n\n                /**\n                 * previous showing cell, decoloring it\n                 */\n                if (i !== 0) {\n                    const prevposition = this.state.index[i - 1];\n                    const prevBlock = this.deColor(position, prevposition)\n                    this.setState(prevState => ({\n                        value: prevBlock[0],\n                        weight: prevBlock[1],\n                        density: prevBlock[2],\n                    }))\n                }\n                /**\n                 * increment the iteration\n                 */\n                this.setState(prevState => ({\n                    Iter: this.state.Iter + 1,\n                }))\n            } else if (this.state.Iter >= this.state.index.length) {\n                this.setState(prevState => ({\n                    currentId: [13]\n                }))\n            }\n        }, 2000);\n    }\n\n    /**\n     * @function\n     * @description ReactJS **lifecycle method** renders the DP matrix, play & pause button , problem statement & pseudocode on UI.\n     * \n     */\n    render() {\n        const wt = (this.state.weightArray.slice(0, this.state.Iter));\n        const val = (this.state.valueArray.slice(0, this.state.Iter));\n        const color = (this.state.color.slice(0, this.state.Iter));\n        //  console.log(this.state.density)\n        return (\n            <section>\n                <section>\n                    <div style={{ marginRight: \"30px\", marginBottom: \"30px\", marginTop: \"30px\" }}>\n                        <Box weightArray={wt} valueArray={val} color={color} capacity={this.props.data.capacity} item={this.state.index} /> <br />\n\n                        <div className=\"control-bar\">\n                            <button className=\"button start\" onClick={() => this.visualize()}>Start Visualization</button> <br />\n                            <button className=\"button play\" onClick={() => this.handlePlay()}>Resume</button>\n                            <button className=\"button pause\" onClick={() => this.handlePause()}>Pause</button>\n                            <button className=\"button play\" onClick={() => this.handleReset()}>Reset</button>\n                            <button className=\"button play\" onClick={() => this.handleEnd()}>End</button>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"visual\">\n                    <Matrix\n                        matrix={this.state.value}\n                        label={false}\n                        title=\"profits\"\n                        labeclassname=\"label subheading\"\n                        description=\"\"\n                    />\n                    <Matrix\n                        matrix={this.state.weight}\n                        label={false}\n                        title=\"weights\"\n                        labeclassname=\"label subheading\"\n                        description=\"\"\n                    />\n                    {  /*<Matrix\n                        matrix={this.state.density}\n                        label={false}\n                        title=\"Profit Per Weight\"\n                        labeclassname=\"label subheading\"\n                        description=\"\"\n                  /> */}\n                    <br />\n                    <div className=\"desc\">\n                        <p className=\"label subheading\">Item profit taken: </p>\n                        <p className=\"equation\"> {this.state.currentVal.toFixed(2)} </p>\n                        <p className=\"label subheading\">Item weight taken: </p>\n                        <p className=\"equation\"> {this.state.currentWt.toFixed(2)} </p>\n                    </div>\n                    <br />\n\n                </div>\n                <section>\n                    <FractionalKnapSackProblem id={this.state.currentId} />\n                </section>\n\n            </section>\n\n        )\n    }\n}\n\n\n\nexport default FractionalKnapsackVisualizer;","import React from 'react';\nimport FractionalKnapSackVisualizer from \"../Container/Visualizer/FractionalKnapSackVisualizer\"\nimport IntegralKnapSackInput from \"../Container/Input/IntegralKnapSackInput\"\nimport Main from \"../Utils/Main/Main\"\nexport default function FractionalKnapSackMain() {\n\n    return (\n\n        <Main\n            Visualizer={FractionalKnapSackVisualizer}\n            Input={IntegralKnapSackInput}\n            title=\"Fractional Knapsack\"\n        />\n    );\n\n}\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from \"../logo.svg\"\nexport default function Home() {\n    return (\n        <div>\n            <h1 style={{ textAlign: 'center' }}>Select your algorithms</h1>\n            <div style={{ textAlign: 'center' }}>\n                <img src={logo} alt=\"logo\" style={{ height: '600px' }} />\n            </div>\n        </div>\n    )\n}","import React, { Component } from \"react\";\nimport \"../../Utils/Button.css\"\nimport \"../../Utils/Label.css\"\n\nclass HuffmanCodeInput extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            message: null,\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n\n        const { name, value } = event.target;\n        this.setState({ [name]: value });\n    }\n\n    inputPreProcess() {\n\n        let message = this.state.message;\n        let leaves = 0, chars = [];\n        let freqMap = new Map();\n        for (let i = 0; i < message.length; i++) {\n            if (freqMap.has(message[i])) {\n                let freq = freqMap.get(message[i]);\n                freqMap.set(message[i], freq + 1);\n            } else {\n                freqMap.set(message[i], 1);\n                leaves++;\n            }\n        }\n        let sortMap = new Map([...freqMap.entries()].sort((a, b) => a[1] - b[1]))\n\n        let values = [];\n        for (let [key, value] of sortMap) {\n            values.push(value);\n            chars.push(key);\n        }\n        const data = {\n            leaves: leaves,\n            chars: chars,\n            values: values,\n            message: this.state.message\n        }\n        return data;\n    }\n    handleSubmit(event) {\n        this.props.func(true, this.inputPreProcess())\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div style={{ textAlign: 'center' }}>\n                <p> sample input <br /> aaaeeebbbg </p>\n                <form onSubmit={this.handleSubmit}>\n                    <label className=\"label input\"> Message </label>\n                    <input type=\"text\"\n                        name=\"message\"\n                        value={this.state.message}\n                        onChange={this.handleChange}\n                    />\n                    <button className=\"button submit\"> Submit</button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default HuffmanCodeInput;","import React, { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Surface } from '@progress/kendo-drawing';\nimport \"../Utils/Main/Main.css\"\n\nclass KendoSurface extends Component {\n\n    surface;\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n            height: props.height,\n            width: props.width,\n            datastructure: props.datastructure,\n        }\n    }\n    componentWillReceiveProps(props) {\n\n        this.setState({\n            data: props.data,\n            height: props.height,\n            width: props.width,\n            datastructure: props.datastructure\n        })\n    }\n    componentDidMount() {\n        this.state.datastructure(this.createSurface(), this.state.data);\n\n    }\n    componentDidUpdate() {\n        if (this.state.data.code === null)\n            this.state.datastructure(this.createSurface(), this.state.data);\n    }\n\n    createSurface = () => {\n\n        const element = ReactDOM.findDOMNode(this);\n        this.surface = Surface.create(element);\n        return this.surface;\n    }\n\n    render() {\n\n        return (\n            <section id=\"surface\" style={{\n                width: this.state.width,\n                height: this.state.height,\n                display: 'flex'\n\n            }}>\n\n            </section>\n        )\n    }\n}\n\nexport default KendoSurface;","\nimport { Circle, geometry, Group, Text } from '@progress/kendo-drawing';\nconst { Circle: GeomCircle } = geometry;\n\nexport function SmallCircle(center, value, radius, color) {\n\n    let font = {\n        fill: {\n            color: 'black'\n\n        },\n        font: `bold 17px Arial`\n    }\n\n    const group = new Group();\n    var val = new Text(value, center, font);\n\n    var circle = new Circle(new GeomCircle(center, radius), {\n        fill: {\n            color: color,\n        }\n    })\n\n    group.append(circle, val);\n    return group;\n}","import { Group } from '@progress/kendo-drawing'\nimport { NewEdge } from \"../Components/NewEdge\"\n\nimport { SmallCircle } from \"../Components/SmallCircle\"\n\nfunction circleColor(p1, p2, i) {\n\n    if (p1 === i || p2 === i)\n        return 'yellow';\n    return 'green';\n}\nexport default function HuffmanCodeTree(surface, data) {\n\n    var group = new Group();\n    var nodeCoordinates = [];\n    var radius = 30, color = 'green', edgeColor = 'black';\n    var left, right;\n    var cx = 100, cy = 100, inc = 150, cir, center;\n    if (data.edges != null) {\n        var lastp1 = data.edges[data.vertices - 1][0], lastp2 = data.edges[data.vertices - 1][1];\n    }\n    var code = [];\n    if (data.label) {\n        for (let i = 0; i < data.vertices; i++)\n            code.push('');\n    }\n\n    for (let i = 0; i < data.leaves; i++) {\n\n        color = circleColor(lastp1, lastp2, i);\n        center = [cx, cy];\n        cir = SmallCircle(center, data.chars[i] + \"::\" + data.values[i], radius, color);\n        group.append(cir);\n        nodeCoordinates.push(center);\n        cx += inc;\n    }\n\n    for (let i = data.leaves; i < data.vertices; i++) {\n\n        color = circleColor(lastp1, lastp2, i);\n\n        if (i === data.vertices - 1) {\n            edgeColor = 'red';\n            color = 'pink';\n        }\n        let p1 = nodeCoordinates[data.edges[i][0]];\n        let p2 = nodeCoordinates[data.edges[i][1]];\n\n        cx = (p1[0] + p2[0]) / 2;\n        if (data.label) {\n\n            if (p1[0] < p2[0]) {\n                left = '1';\n                right = '0';\n\n            } else {\n                right = '1';\n                left = '0';\n            }\n            code[data.edges[i][0]] = left;\n            code[data.edges[i][1]] = right;\n\n        }\n        cy = Math.max(p1[1], p2[1]) + (inc / 2);\n\n        center = [cx, cy];\n        cir = SmallCircle(center, data.values[i], radius, color);\n        nodeCoordinates.push(center);\n        group.append(cir);\n\n        let e1 = NewEdge(p1, center, edgeColor, data.label, left);\n        let e2 = NewEdge(p2, center, edgeColor, data.label, right);\n\n        group.append(e1);\n        group.append(e2);\n    }\n\n    if (data.label) {\n        for (let i = (data.edges.length) - 1; i >= data.leaves; i--) {\n            var p1 = data.edges[i][0];\n            var p2 = data.edges[i][1];\n            code[p1] = code[i] + code[p1];\n            code[p2] = code[i] + code[p2];\n\n        }\n\n\n        data.updateCode(code);\n    }\n    surface.draw(group);\n}","function codeProcess(map, leaves, charMap, message) {\n\n    var temp = new Array(leaves)\n    for (let [key, value] of map) {\n        for (let j = 0; j < value.length; j++) {\n            temp[value[j]] = key;\n        }\n    }\n\n    var tempMessage = '';\n    var colorIndex = [];\n    for (let i = 0; i < message.length; i++) {\n        let char = message[i];\n        let index = charMap.get(char);\n        if (temp[index] >= leaves)\n            tempMessage = tempMessage + temp[index];\n        else\n            tempMessage += char;\n        if (i !== message.length - 1)\n            tempMessage += '-';\n        else\n            tempMessage += '\\n';\n\n    }\n\n    return tempMessage;\n}\nfunction huffmanCode(chars, freq, leaves, message) {\n\n    var minHeap = [], parents = [];\n    var map = new Map();\n    var charMap = new Map();\n    var edges = [], values = [], id = [];\n    for (let i = 0; i < leaves; i++) {\n        minHeap.push([freq[i], i]);\n        edges.push([]);\n        values.push(freq[i]);\n        map.set(i, [i]);\n        charMap.set(chars[i], i);\n    }\n    parents.push((message + '\\n'));\n    id.push([1, 2]);\n    var vertices = leaves;\n    var iter = leaves;\n    while (minHeap.length !== 1) {\n\n        var leasttwo = minHeap.slice(0, 2);\n        var val = leasttwo[0][0] + leasttwo[1][0]\n        var p1 = leasttwo[0][1], p2 = leasttwo[1][1];\n        var newNode = [val, iter];\n\n        values.push(val);\n        edges.push([p1, p2]);\n\n        var rest = minHeap.slice(2, minHeap.length);\n        minHeap = rest;\n        minHeap.push(newNode);\n        minHeap.sort(function (a, b) { return a[0] - b[0]; });\n\n        map.set(iter, map.get(p1).concat(map.get(p2)));\n        map.delete(p1);\n        map.delete(p2);\n        parents.push(codeProcess(map, leaves, charMap, message));\n\n        iter++;\n        vertices++;\n        id.push([4, 5, 6, 7, 8]);\n    }\n    id.push([9]);\n\n    const allSteps = {\n        vertices: vertices,\n        edges: edges,\n        values: values,\n        id: id,\n        parents: parents,\n    }\n\n    return allSteps;\n}\n\nexport default huffmanCode;","import \"../Utils/Font.css\"\nimport { helperHighlight } from \"./helperHighlight\"\n\nexport default function HuffmanCodeProblem(props) {\n\n    helperHighlight(props.id, 9)\n\n    return (\n        <div>\n            <h4 className=\"Heading\"> Problem </h4>\n            <p className=\"paragraph\"> A greedy algorithm that constructs an optimal prefix code called,\n            Huffman code.Assume that \"C\" is a set of \"n\" characters and\n            that each character \"c\" in \"C\" is an object with an attribute \"c:freq\" giving its frequency.\n            The algorithm builds the tree \"T\" corresponding to the optimal code in a bottom-up\n            manner with the help of  min-priority queue \"Q\".  </p>\n\n            <div className=\"code\">\n                <p id={0}>{\"HUFFMAN (C)\"}</p>\n                <p id={1}>{\"1. \"}<span className=\"tab\" />{\"n = |C| \"}</p>\n                <p id={2}>{\"2. \"}<span className=\"tab\" />{\"Q = C \"}</p>\n                <p id={3}>{\"3. \"}<span className=\"tab\" />{\"for i = 1 to n-1\"}</p>\n                <p id={4}>{\"4. \"}<span className=\"tab\" /><span className=\"tab\" />{\"allocate a new node z\"}</p>\n                <p id={5}>{\"5. \"}<span className=\"tab\" /><span className=\"tab\" />{\"z.left = x = EXTRACT-MIN(Q)\"}</p>\n                <p id={6}>{\"6. \"}<span className=\"tab\" /><span className=\"tab\" />{\"z.right = y = EXTRACT-MIN(Q)\"}</p>\n                <p id={7}>{\"7. \"}<span className=\"tab\" /><span className=\"tab\" />{\"z.freq = x.freq + y.freq\"}</p>\n                <p id={8}>{\"8. \"}<span className=\"tab\" /><span className=\"tab\" />{\"INSERT(Q,z)\"}</p>\n                <p id={9}>{\"9. \"}<span className=\"tab\" />{\"return EXTRACT-MIN(Q) \"}</p>\n            </div>\n        </div>\n    )\n}\n\n/**\n * H UFFMAN .C /\n1 n D jC j\n2 Q D C\n3 for i D 1 to n \u0005 1\n4\nallocate a new node  ́\n5\n ́:left D x D E XTRACT -M IN .Q/\n6\n ́:right D y D E XTRACT -M IN .Q/\n7\n ́:freq D x:freq C y:freq\n8\nI NSERT .Q;  ́/\n// return the root of the tree\n9 return E XTRACT -M IN .Q/\n */","import \"../../Utils/Font.css\"\nexport default function STring(props) {\n    return (\n        <div>\n            <div className=\"mediumFont\">\n                <span className=\"equation\">{props.index}. </span>\n                {props.sTring}\n            </div>\n        </div>\n    )\n}","import STring from \"./STring\"\nimport \"../../Utils/Label.css\"\nexport default function StringArray(props) {\n\n    return (\n        <div >\n            <br />\n            <label className=\"label heading\">{props.title}</label><br />\n            <br />\n            <table style={{ textAlign: props.align }}>\n                <tbody>\n                    {\n                        props.array.map((sTring, i) => (<STring sTring={sTring} index={i} />))\n\n                    }</tbody>\n            </table>\n\n        </div>\n    )\n}","import React, { Component } from \"react\";\n\nimport KendoSurface from \"../../Utils/KendoSurface\"\nimport HuffmanCodeTree from \"../../DataStructure/HuffmanCodeTree\"\nimport HuffmanCode from \"../Algorithms/HuffmanCode\"\nimport HuffmanCodeProblem from \"../../Problems/HuffmanCodeProblem\"\nimport Matrix from \"../../Components/Matrix\";\nimport StringArray from \"../../Components/StringArray/StringArray\"\n\nimport \"../../Utils/Main/Main.css\"\nimport \"../../Utils/Font.css\"\nimport \"../../Utils/Button.css\"\nimport \"../../Utils/ControlBar.css\"\nimport \"../../Utils/Label.css\"\nimport { createMatrix } from \"../../Utils/CreateMatrix\";\n\nclass HuffmanCodeVisualizer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            leaves: props.data.leaves,\n            vertices: props.data.leaves,\n            edges: null,\n            values: props.data.values,\n            chars: props.data.chars,\n            freq: props.data.values,\n            Iter: props.data.leaves,\n            allSteps: null,\n            isRunning: false,\n            label: false,\n            Id: null,\n            code: null,\n            subprobs: [props.data.message],\n        }\n        this.updateCode = this.updateCode.bind(this);\n    }\n\n    /**\n     * function called when the props passing to the componenet changes\n     */\n\n    componentWillReceiveProps(props) {\n\n        this.setState(prevState => ({\n            leaves: props.data.leaves,\n            vertices: props.data.leaves,\n            edges: null,\n            values: props.data.values,\n            chars: props.data.chars,\n            freq: props.data.values,\n            Iter: props.data.leaves,\n            allSteps: null,\n            isRunning: false,\n            label: false,\n            Id: null,\n            code: null,\n            subprobs: [props.data.message],\n        }))\n    }\n\n    /**\n     * label updating\n     */\n    exhaustiveCode() {\n        var numberOfDigits = Math.ceil(Math.log2(this.state.leaves));\n        var eLength = 0;\n        for (let i = 0; i < this.state.chars.length; i++) {\n            eLength += (this.state.freq[i] * numberOfDigits);\n        }\n        return [numberOfDigits, eLength];\n    }\n    updateCode(code) {\n\n        var needCode = code.slice(0, this.state.leaves);\n        const codeUpdate = [this.state.chars, needCode]\n        this.mLength = 0;\n        for (let i = 0; i < this.state.chars.length; i++) {\n            this.mLength += (this.state.freq[i] * (needCode[i].length));\n        }\n        this.setState({\n            code: codeUpdate,\n        })\n    }\n    /**\n        * @function\n        * @event\n        * @description Pausing the visualisation. \n        */\n    handlePause() {\n\n        /**\n         * set isRunning variable to false\n         */\n        this.setState(prevState => ({\n            isRunning: false\n        }))\n\n    }\n\n    handleReset() {\n\n\n        this.setState(prevState => ({\n            Iter: prevState.leaves,\n        }))\n    }\n\n    handleEnd() {\n\n        if (this.state.allSteps === null)\n            this.visualize();\n        this.setState(prevState => ({\n            Iter: prevState.allSteps.vertices,\n        }))\n    }\n    /**\n     * @function\n     * @event\n     * @description Resuming the visualisation\n     */\n    handlePlay() {\n\n        /**\n         * set isRunning to true\n         */\n        this.setState(prevState => ({\n            isRunning: true\n        }))\n    }\n    handleReset() {\n        this.componentWillReceiveProps(this.props);\n    }\n    /**\n     * function is called when the startvisualiation is clicked\n     */\n\n    visualize() {\n\n\n        const allSteps = HuffmanCode(this.state.chars, this.state.freq, this.state.leaves, this.props.data.message);\n        this.setState(prevState => ({\n            allSteps: allSteps,\n            isRunning: true,\n        }))\n\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    componentWillMount() {\n        this.interval = setInterval(() => {\n\n            if (this.state.isRunning && this.state.Iter <= this.state.allSteps.vertices) {\n\n                const i = this.state.Iter;\n                const j = i - this.state.leaves;\n                const edges = this.state.allSteps.edges.slice(0, i);\n                const values = this.state.allSteps.values.slice(0, i);\n                const Id = this.state.allSteps.id[j];\n                const subprobs = this.state.allSteps.parents.slice(0, j + 1)\n\n                this.setState(prevState => ({\n                    vertices: i,\n                    edges: edges,\n                    values: values,\n                    Id: Id,\n                    Iter: prevState.Iter + 1,\n                    subprobs: subprobs\n                }))\n\n            }\n            else if (this.state.isRunning && this.state.Iter === this.state.allSteps.vertices + 1) {\n                this.setState(prevState => ({\n                    label: true,\n                    Iter: prevState.Iter + 1,\n                    Id: [9],\n                    isRunning: false,\n                }))\n            }\n        }, 1000)\n    }\n\n    render() {\n        const data = {\n            leaves: this.state.leaves,\n            vertices: this.state.vertices,\n            edges: this.state.edges,\n            values: this.state.values,\n            chars: this.state.chars,\n            label: this.state.label,\n            updateCode: this.updateCode,\n            code: this.state.code\n        };\n        let width = Math.max(this.state.leaves * 150, 350);\n        var height = 620;\n        var code = this.state.code;\n        let resultExhaustive = this.exhaustiveCode();\n        return (\n            <section>\n                <div className=\"visual\">\n                    <label className=\"label heading\"> Huffman Code </label>\n                    <KendoSurface data={data} datastructure={HuffmanCodeTree} height={height} width={width} />\n                    <div className=\"control-bar\">\n                        <button className=\"button start\" onClick={() => this.visualize()}>Start Visualization</button> <br />\n                        <button className=\"button play\" onClick={() => this.handlePlay()}>Resume</button>\n                        <button className=\"button pause\" onClick={() => this.handlePause()}>Pause</button>\n                        <button className=\"button play\" onClick={() => this.handleReset()}>Reset</button>\n                        <button className=\"button play\" onClick={() => this.handleEnd()}>End</button>\n                    </div>\n                </div>\n                <div className=\"smallsection\">\n                    <StringArray array={this.state.subprobs} title={\"Sub Problems\"} align={\"left\"} />\n                    {this.state.code !== null ? <div><Matrix\n                        matrix={createMatrix(code, 1, this.state.leaves - 1)}\n                        label={false}\n                        title=\" Result\"\n                        labeclassname=\"label subheading\"\n                        description=\"\"\n                    />\n\n                        <br />\n                        <div className=\"code\">\n                            <label className=\"label subheading\"> Comparison</label> <br />\n                            <label className=\"label subheading\"> Fixed Length code</label> <br />\n\n                            <span> Number of digits = {resultExhaustive[0]}</span> <br />\n                            <span> Total message Length = {resultExhaustive[1]}</span> <br />\n                            <label className=\"label subheading\">Huffman code</label> <br />\n                            <span> Total message Length = {this.mLength}</span>\n                        </div></div> : ''}\n\n                </div>\n                <section>\n                    <HuffmanCodeProblem id={this.state.Id} />\n                </section>\n\n            </section>\n        )\n    }\n\n}\n\n\nexport default HuffmanCodeVisualizer;\n/**comment */","import React from 'react';\n//import IntegralKnapsackVisualizer from \"../Container/Visualizer/IntegralKnapsackVisualizser\"\nimport HuffmanCodeInput from \"../Container/Input/HuffmanCodeInput\"\nimport Main from \"../Utils/Main/Main\"\nimport HuffmanCodeVisualizer from \"../Container/Visualizer/HuffmanCodeVisualizer\"\nexport default function HuffmanCodeMain() {\n\n    return (\n\n        <Main\n            Visualizer={HuffmanCodeVisualizer}\n            Input={HuffmanCodeInput}\n            title=\"Huffman Code\"\n        />\n\n    );\n\n}\n","import React, { Component } from \"react\"\nimport { BrowserRouter, Route, withRouter, Redirect } from \"react-router-dom\";\nimport IntegralKnapSackMain from \"./Algorithm/IntegralKnapSackMain\"\nimport FractionalKnapSackMain from \"./Algorithm/FractionalKnapSackMain\"\nimport Home from \"./Algorithm/Home\"\nimport HuffmanCodeMain from \"./Algorithm/HuffmanCodeMain\"\nclass DropDown extends Component {\n  onChange = (e) => {\n    this.props.history.push(`/${e.target.value}`);\n  }\n  render() {\n    return (\n      <div style={{ textAlign: 'center', padding: \"10px\", background: 'pink' }}>\n        <select onChange={this.onChange} style={{ color: 'black', background: 'pink', height: '40px' }}>\n          <option value=\"home\" >Home</option>\n          <option value=\"integralknapsack\">Integral Knapsack</option>\n          <option value=\"fractionalknapsack\">Fractional Knapsack</option>\n          <option value=\"huffmancode\">Huffman Coding</option>\n        </select>\n      </div>\n    );\n  }\n}\nconst Menu = withRouter(DropDown);\n\nfunction App() {\n\n  return (\n\n    <BrowserRouter>\n      <div>\n        <Menu />\n        <Redirect from=\"/\" to=\"/home\" />\n        <Route path=\"/home\" render={() => <Home />} />\n        <Route path=\"/integralknapsack\" render={() => <IntegralKnapSackMain />} />\n        <Route path=\"/fractionalknapsack\" render={() => <FractionalKnapSackMain />} />\n        <Route path=\"/huffmancode\" render={() => <HuffmanCodeMain />} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}